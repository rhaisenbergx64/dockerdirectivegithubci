services:
  postgres:
    container_name: db
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_PASSWORD=foobarbaz
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432:5432
    networks:
      - my-network

  api-golang:
    container_name: api-golang
    build:
      context: ./api-golang
      dockerfile: dockerfile  # change this if it's actually lowercase
      target: dev
    volumes: 
       - type: bind
         source: ./api-golang
         target: /app/
    image: api-golang
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    ports:
      - 0.0.0.0:8080:8080
    depends_on:
      - postgres
    restart: always
    networks:
      - my-network

  api-node:
    container_name: api-node
    build:
      context: ./api-node
      dockerfile: dockerfile
      target: dev
    init: true
    volumes: 
       - type: bind
         source: ./api-node
         target: /usr/src/app/
       - type: volume
         target: /usr/src/app/node_modules
    image: api-node
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    ports:
      - 0.0.0.0:3000:3000
    depends_on:
      - postgres
    restart: always
    networks:
      - my-network

  client-react-vite:
    container_name: client-react-vite
    build:
      context: ./client-react
      dockerfile: dockerfile
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
     - type: bind
       source: ./client-react/
       target: /usr/src/app
     - type: volume
       target: /usr/src/app/node_modules
     - type: bind
       source: ../08-running-containers/client-react/vite.config.js
       target: /usr/src/app/vite.config.js  
    init: true 
    image: client-react-vite
    ports:
      - 0.0.0.0:5173:5173
    restart: always
    depends_on:
      - api-node
      - api-golang
    networks:
      - my-network

networks:
  my-network:
    name: my-network
    
volumes:
  pgdata:
    name: pgdata
